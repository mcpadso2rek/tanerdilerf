version: '3'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: service-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      #- cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
#    mem_limit: 500m
#    cap_add:
#      - IPC_LOCK
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data:rw

  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.0
    container_name: service-kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  zipkin:
    image: openzipkin/zipkin
    container_name: service-zipkin
    ports:
      - 9411:9411

  logstash:
    image: docker.elastic.co/logstash/logstash:7.8.0
    container_name: service-logstash
    restart: unless-stopped
    command: logstash -f /usr/share/logstash/pipeline
    volumes:
      - ./containerized-logstash/config:/usr/share/logstash/config:ro
      - ./containerized-logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "12204:12204"
    depends_on:
      - elasticsearch

  discovery:
    image: tanerdiler/service-discovery
    container_name: service-discovery
    build:
      context: ./containerized-discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - logstash
    links:
      - logstash

#   cassandra-node-1:
#     hostname: cassandra-1
#     image: cassandra:latest
#     command: /bin/bash -c "sleep 1 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
#     expose:
#       - 7000
#       - 7001
#       - 7199
#       - 9042
#       - 9160
#  cassandra-node-2:
#    hostname: cassandra-2
#    image: cassandra:latest
#    command: /bin/bash -c "sleep 30 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
#    links:
#      - cassandra-node-1:cassandra
#    expose:
#      - 7000
#      - 7001
#      - 7199
#      - 9042
#      - 9160
  gateway:
    image: tanerdiler/service-gateway
    container_name: service-gateway
    build:
      context: ./containerized-gateway
      dockerfile: Dockerfile
    ports:
      - "8762:8762"
    links:
      - discovery
      - logstash
      - zipkin

  accounts:
    image: tanerdiler/service-accounts-api
    container_name: service-accounts
    build:
      context: ./containerized-accounts
      dockerfile: Dockerfile
    ports:
      - "7500:2222"
    links:
      - discovery
      - logstash
      - zipkin

  products:
    image: tanerdiler/service-products-api
    container_name: service-products
    build:
      context: ./containerized-products
      dockerfile: Dockerfile
    ports:
      - "7501:2222"
    depends_on:
      - discovery
      - accounts
    links:
      - discovery
      - logstash
      - zipkin

  orders:
    image: tanerdiler/service-orders-api
    container_name: service-orders
    build:
      context: ./containerized-orders
      dockerfile: Dockerfile
    ports:
      - "7502:2222"
    depends_on:
      - discovery
      - products
    links:
      - discovery
      - logstash
      - zipkin

  main:
    image: tanerdiler/service-main-api
    container_name: service-main
    build:
      context: ./containerized-main
      dockerfile: Dockerfile
    ports:
      - "7503:2222"
    depends_on:
      - discovery
      - orders
    links:
      - discovery
      - logstash
      - accounts
      - products
      - orders
      - zipkin
